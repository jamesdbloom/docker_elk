input {
    file {type => "syslog" path => ["/var/log/syslog"]}
    file {type => "nginx-access" path => ["/var/log/nginx/**"] exclude => ["*.gz"]}
    file {type => "elasticsearch" path => ["/var/log/elasticsearch/**"] exclude => ["*.gz"]}
    file {type => "logstash" path => ["/var/log/logstash/**"] exclude => ["*.gz"]}
    file {type => "supervisor" path => ["/var/log/supervisor/**"] exclude => ["*.gz"]}
    file {type => "upstart" path => ["/var/log/upstart/**"] exclude => ["*.gz"]}
    file {type => "unattended-upgrades" path => ["/var/log/unattended-upgrades/**"] exclude => ["*.gz"]}
    file {type => "fsck" path => ["/var/log/fsck/**"] exclude => ["*.gz"]}
    file {type => "apt" path => ["/var/log/apt/**"] exclude => ["*.gz"]}
    file {type => "dmesg" path => ["/var/log/dmesg"]}
    file {type => "alternatives" path => ["/var/log/alternatives.log"]}
    file {type => "bootstrap" path => ["/var/log/bootstrap.log"]}
    file {type => "dpkg" path => ["/var/log/dpkg.log"]}
}
filter {
    if [type] == "nginx-access" {
        grok {
            patterns_dir => "/etc/logstash/patterns"
            match => {"message" => "%{NGINXACCESS}"}
        }
        date {
            type => "nginx-access"
            match => [ "nginx_timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
        }
        geoip {
            type => "nginx-access"
            add_tag => [ "geoip" ]
            source => "clientip"
        }
        mutate {
            tags => [ "geoip" ]
            # 'coords' will be kept, 'tmplat' is temporary.
            # Both of these new fields are strings.
            add_field => [ "coords", "%{geoip.longitude}",
                           "tmplat", "%{geoip.latitude}" ]
        }
        mutate {
            tags => [ "geoip" ]
            # Merge 'tmplat' into 'coords'
            merge => [ "coords", "tmplat" ]
        }
        mutate {
            tags => [ "geoip" ]
            # Convert our new array of strings back to float
            convert => [ "coords", "float" ]
            # Delete our temporary latitude field
            remove => [ "tmplat" ]
        }
    }
    if [type] == "syslog" {
        grok {
            patterns_dir => "/etc/logstash/patterns"
            match => {"message" => "%{LOGSYS}"}
            add_field => ["received_at", "%{@timestamp}"]
            add_field => ["received_from", "%{host}"]
        }
        syslog_pri { }
        date {
            match => ["syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
        }
    }
}
output {
    elasticsearch {host => "localhost" cluster => "logstash"}
}